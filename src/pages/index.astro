---
import { Markdown } from "astro/components";
import BaseHead from "../components/BaseHead.astro";
---

<html lang="en">
    <head>
        <BaseHead title="Max Niederman" description="The personal website of Max Niederman." />
    </head>

    <body>
        <main>
            <h1>Max <br /> Niederman</h1>

            <div class="sections">
                <div class="midline" />

                <div class="spacer" />
                <section>
                    <div class="label">00</div>
                    <Markdown>
                        ## About Me

                        I'm a fifteen-year-old high-school student with a passion for programming. I'm a **FOSS** user and contributor and I aspire to **learn** more about Computer Science, both theoretical and practical.
                    </Markdown>
                </section>

                <section>
                    <div class="label">01</div>
                    <!-- TODO: add icons -->
                    <Markdown>
                        ## Links

                        [GitHub](https://github.com/max-niederman)

                        [E-mail](mailto://max@maxniederman.com)

                        [Discord](https://discord.com/users/311324287086624768)

                        [Keybase](https://keybase.io/niederman)

                        [PGP Public Key](/pgp_key)
                    </Markdown>
                </section>
                <div class="spacer" />

                <div class="spacer" />
                <section>
                    <div class="label">02</div>
                    <Markdown>
                        ## Skills

                        ### Languages

                        My current favorite and by far most used language is **Rust**. I'm also well versed in **JavaScript** and **TypeScript** both in Node/Deno and on the browser. I will use **Java** if held at gunpoint.

                        I write scripts in languages like **Python** and **Bash**.

                        ### General

                        I daily drive **NixOS**, a **Linux** distribution built with **Nix**, a purely functional programming language for packaging software.

                        I version control all of my projects with **Git** and **GitHub**.

                        I use **Visual Studio Code** with **ViM** bindings or **Neovim** as my text editor.

                        ### Web Development

                        On the frontend, I use mostly **Svelte**, **React**, and **Preact**. For styling I use **Sass**. I'm well versed in module bundlers such as **Vite**, **Webpack**, and **Snowpack** as well as build tools like **Babel**.

                        I'm a fan of **SvelteKit**, **Astro**, **Next.js**, and **Fastify**. I use (but maybe am not such a big fan of) **Gatsby** and **Express**.
                    </Markdown>
                </section>
            </div>

            <h1>Projects</h1>
            
            <p>Some of my work.</p>

            <div class="sections">
                <div class="midline" />

                <section>
                    <div class="label">03</div>
                    <Markdown>
                        ## ttyper

                        A typing test/practice tool running in the terminal. Written from scratch in Rust using [the tui-rs library](https://github.com/fdehau/tui-rs).

                        ![recording of ttyper](https://raw.githubusercontent.com/max-niederman/ttyper/main/resources/recording.gif)

                        As of writing, `ttyper` has over 300 GitHub stars and fifteen contributors.

                        <!-- TODO: use icons -->
                        [github.com/max-niederman/ttyper](https://github.com/max-niederman/ttyper)

                        [read more ->](/projects/ttyper)
                    </Markdown>
                </section>
                <div class="spacer" />

                <div class="spacer" />
                <section>
                    <div class="label">04</div>
                    <Markdown>
                        ## Website of Northwest Forestry Services

                        I built the website for Northwest Forestry Services, a business providing forest-related services throughout the Pacific Northwest. I also deployed the site on **Cloudflare Pages**.

                        [the website ->](https://nwforestryservices.com)
                    </Markdown>
                </section>

                <section>
                    <div class="label">05</div>
                    <Markdown>
                        ## Lúthien

                        Lúthien, named after the character from J.R.R. Tolkien's _Lord of the Rings_, is an automatic theme generation tool written in **Rust**.

                        It uses a pluggable architecture to enable you to automatically generate and apply themes for any software on your system.

                        [github.com/max-niederman/luthien](https://github.com/max-niederman/luthien)

                        [read more ->](/projects/luthien)
                    </Markdown>
                </section>
                <div class="spacer" />

                <div class="spacer" />
                <section>
                    <div class="label">06</div>
                    <Markdown>
                        ## Website of FRC Team 3636

                        My FRC team's website was [not great](https://web.archive.org/web/20201126073520/http://ghsrobo.com/), so I designed, built, and deployed a new one using **Gatsby**, **TypeScript**, and **Netlify CMS**.

                        [github.com/FRC3636/website](https://github.com/FRC3636/website)

                        [the website ->](https://ghsrobo.com)
                    </Markdown>
                </section>
            </div>

            <h1>Today</h1>

            <p>What I'm currently working on.</p>

            <div class="sections">
                <div class="midline" />

                <section>
                    <div class="label">07</div>
                    <Markdown>
                        ## Paint

                        Paint is an alternative client for Canvas (get it?), the [Learning Management System](https://en.wikipedia.org/wiki/Learning_management_system) used by my school and many others.

                        The backend is written in **Rust** and the frontend in **Svelte** using **Vite**. The backend is mostly finished, with authentication and almost everything else needed for an MVP implemented; however, the frontend needs a lot of work.

                        Over the next few weeks I hope to be able to get it in a working state, at which time I'll publish the code to GitHub.
                    </Markdown>
                </section>
                <div class="spacer" />

                <div class="spacer" />
                <section>
                    <div class="label">08</div>
                    <Markdown>
                        ## Functional Programming and Category Theory

                        For quite a while now, I've been interested in learning Haskell and using it for a project. I plan to for the next project I start.

                        In addition, I've been slowly reading Bartosz Milewski's excellent book _Category Theory for Programmers_.
                    </Markdown>
                </section>
            </div>
        </main>
    </body>
</html>

<style lang="scss">
    @use "sass:color";
    @use "../styles/theme";
    @use "../styles/typography";

    main {
        text-align: center;

        h1 {
            font-size: 4em;
            font-weight: 700;
            color: theme.$color-accent;

            @media screen and (min-width: 520px) {
                font-size: 5em;
            }

            @media screen and (min-width: 640px) {
                font-size: 6em;
            }
        }

        h2 {
            font-size: 2.25em;
        }

        h3 {
            font-size: 1.5em;
        }

        .sections {
            display: grid;
            justify-content: center;

            grid-template-columns: 100%;
            grid-auto-rows: max-content;

            margin: 16px 0;
            padding: 16px;

            // use typographic styles
            section {
                text-align: left;
                @include typography.typography;
            }

            // on medium-sized devices, center and limit the width of each section
            justify-items: center;
            section {
                margin: 16px 0;
                width: 100%;
                max-width: 480px;
            }

            // position the label behind the top right corner
            section {
                // set so the `section` is the `.label`'s containing block
                position: relative;

                .label {
                    position: absolute;
                    z-index: -1;
                    top: 0;
                    right: 0;
                }
            }

            section {
                &:hover .label {
                    color: color.scale(theme.$color-bg, $lightness: 20%);
                }

                .label {
                    color: color.scale(theme.$color-bg, $lightness: 10%);
                    font-family: theme.$font-mono;
                    font-weight: 700;
                    font-size: 8em;
                }
            }

            // the midline and spacers are only shown on the desktop layout
            .midline, .spacer {
                display: none;
            }

            @media screen and (min-width: 940px) {
                grid-template-columns: 40ch [midline] 0px 40ch;
                column-gap: 64px;

                .midline {
                    display: block;
                    grid-column: midline;
                    grid-row: 1 / span 256; // a placeholder to make it span the entire grid

                    width: 0;
                    height: 100%;
                    margin: auto;

                    border-left: 1px theme.$color-fg solid;
                }

                .spacer {
                    display: block;
                }

                section {
                    &:nth-child(even) {
                        text-align: right;
                    }
                    &:nth-child(odd) {
                        text-align: left;
                    }
                }

                // position the `.label` on the other side of the midline
                section {
                    $offset: calc(100% + 128px);

                    &:nth-child(even) .label {
                        left: $offset;
                    }
                    &:nth-child(odd) .label {
                        right: $offset;
                    }
                }
            }
        }
    }
</style>